version: '3'

services:

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    volumes:
      - wp-data:/var/www/html
    env_file:
      - .env
    ports:
      - "443:443"
    networks:
      - inception
    depends_on:
      - wordpress
      - adminer
    restart: always

  mariadb:
    build: ./requirements/mariadb/
    container_name: mariadb
    volumes:
      - db-data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - inception
    restart: always

  wordpress:
    build: ./requirements/wordpress/
    container_name: wordpress
    volumes:
      - wp-data:/var/www/html
    env_file:
      - .env
    networks:
      - inception
    depends_on:
      - mariadb
      - redis
    restart: always

  redis:
    build: ./requirements/bonus/redis/
    container_name: redis
    env_file:
      - .env
    networks:
      - inception
    sysctls:
      net.core.somaxconn: "4096"
    restart: always

  ftp:
    build: ./requirements/bonus/ftp/
    container_name: ftp
    volumes:
      - wp-data:/var/www/html
    env_file:
      - .env
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    networks:
      - inception
    restart: always

  adminer:
    build: ./requirements/bonus/adminer/
    container_name: adminer
    env_file:
      - .env
    networks:
      - inception
    depends_on:
      - mariadb
    restart: always

  container-stats:
    build: ./requirements/bonus/container-stats/
    container_name: container-stats
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    environment:
      STATS_UPDATE_INTERVAL: 10
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - inception
    restart: always

  website:
    build: ./requirements/bonus/website/
    container_name: website
    ports:
      - "4000:4000"
    networks:
      - inception
    restart: always


networks:
  inception:
    driver: bridge

volumes:
  wp-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/wp

  db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/db
